---
# Internal HTTPS LB are not comptible with FrontendConfig
# you cannot do HTTP redirect, or set SSL policies
---
# for container native load balancing, each service has BackendConfig
# that defines health check and security policy, so not defined here
#
# if this was non container-native load balancing, then
# we would define a backend to the istiod service and would
# add a backend to its health check (/healthz/ready) and status port
# referenced in: roles/ASM-IngressGateway/templates/istio-ingressgateway/service.yaml
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cnr-my-ingress-int
  #namespace: "{{ingress_namespace}}"
  annotations:
    # If the class annotation is not specified it defaults to "gce".
    kubernetes.io/ingress.class: gce-internal

    # name of regional static IP, must exist because does not default to creating ephemeral one
    kubernetes.io/ingress.regional-static-ip-name: {{subnet_name}}-int-ip

    # must be false for internal HTTPS LB
    kubernetes.io/ingress.allow-http: "false"

    # intentionally removed for internal HTTPS LB
    # internal https lb do not support: ssl policies or redirection
    # https://jayendrapatil.com/google-cloud-load-balancing-types/
    #networking.gke.io/v1beta1.FrontendConfig: lb-http-to-https

    # for certificate on internal HTTPS LB, needs regional (not global!) pre-shared cert
    ingress.gcp.kubernetes.io/pre-shared-cert: {{cluster_name}}-pre-shared-cert-int

spec:
#  defaultBackend:
#    service:
#      name: golang-hello-world-web-service
#      port:
#        number: 8080

#  tls:
#  - secretName: {{cluster_name}}-tls-secret

  rules:
  - http:
      paths:
      - path: /myint/*
        pathType: ImplementationSpecific
        backend:
          service:
            name: golang-hello-world-web-int-service
            port:
              number: 8080
# ADDTITIONAL services could be added here
#      - path: /myint/*
#        pathType: ImplementationSpecific
#        backend:
#          service:
#            name: golang-hello-world-web-int-service
#            port:
#              number: 8080
