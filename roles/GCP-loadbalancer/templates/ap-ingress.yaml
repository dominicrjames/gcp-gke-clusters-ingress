---
apiVersion: networking.gke.io/v1beta1
kind: FrontendConfig
metadata:
  name: ap-lb-http-to-https
  namespace: default #asm-gateways
spec:
  redirectToHttps:
    enabled: true
  # need to create ssl-policies, https://cloud.google.com/load-balancing/docs/use-ssl-policies#creating_ssl_policies
  #sslPolicy: gke-ingress-ssl-policy
---
# https://cloud.google.com/kubernetes-engine/docs/how-to/load-balance-ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ap-my-ingress
  namespace: default #asm-gateways
  annotations:
    # If the class annotation is not specified it defaults to "gce".
    kubernetes.io/ingress.class: gce
    # name of global static IP, will default to using public ephemeral if this does not exist
    #kubernetes.io/ingress.global-static-ip-name: {{cluster_name}}-global
    kubernetes.io/ingress.allow-http: "false"
    #networking.gke.io/v1beta1.FrontendConfig: lb-http-to-https
spec:
#  defaultBackend:
#    service:
#      name: golang-hello-world-web-service
#      port:
#        number: 8080

  tls:
  - secretName: {{cluster_name}}-tls-secret

  rules:
  - http:
      paths:
      - path: /myhello/*
        pathType: ImplementationSpecific
        backend:
          service:
            name: golang-hello-world-web-service
            port:
              number: 8080
#      - path: /myint/*
#        pathType: ImplementationSpecific
#        backend:
#          service:
#            name: golang-hello-world-web-int-service
#            port:
#              number: 8080

#  rules:
#  - http:
#      paths:
#      - path: /*
#        pathType: ImplementationSpecific
#        backend:
#          service:
#            name: istio-ingressgateway
#            port:
#              number: 443
              # served up http good
              #number: 80
