---

- name: create security-policy for Cloud Armor
  command:
    cmd: "gcloud compute security-policies create {{cluster_name}}-security-policy --description \"Cloud Armor security policy\""
  register: create_secpol
  failed_when: create_secpol.rc!=0 and not "already exists" in create_secpol.stderr

- debug: msg="{{create_secpol}}"

- name: set logging for rule
  command:
    cmd: "gcloud compute security-policies update {{cluster_name}}-security-policy --log-level=VERBOSE"

- name: update security rule with XSS
  command:
    cmd: "gcloud compute security-policies rules create 1000 --security-policy {{cluster_name}}-security-policy --expression \"evaluatePreconfiguredExpr('xss-stable')\" --action deny-403 --description \"XSS attack filtering\""
  register: update_output
  failed_when: false
- debug: msg="{{update_output}}"

- name: update security rule with DDOS
  command:
    cmd: "gcloud beta compute security-policies update {{cluster_name}}-security-policy --enable-layer7-ddos-defense"
  register: update_output
- debug: msg="{{update_output}}"


# use different files depending on if managed or incluster
- set_fact:
    dir_prefix: ""
  when: asm_type != "managed"
- set_fact:
    dir_prefix: "ap-"
  when: asm_type == "managed"

- name: create dest dir for files
  file:
    path: /tmp/{{cluster_name}}
    state: directory

- name: copy files
  copy:
    src: "{{role_path}}/templates/{{item}}"
    dest: /tmp/{{cluster_name}}
  loop:
    - "{{dir_prefix}}ingress-backendconfig.yaml"
    - "{{dir_prefix}}ingress.yaml"

- name: create templates
  template:
    src: "{{item}}"
    dest: /tmp/{{cluster_name}}
  loop:
    - "{{dir_prefix}}ingress.yaml"
    - "{{dir_prefix}}ingress-backendconfig.yaml"

- name: Ensure the default Namespace exists.
  kubernetes.core.k8s:
    kubeconfig: "{{remote_kubeconfig}}"
    api_version: v1
    kind: Namespace
    name: asm-gateways
    state: present

- name: apply yaml manifests
  kubernetes.core.k8s:
    kubeconfig: "{{remote_kubeconfig}}"
    state: present
    src: /tmp/{{cluster_name}}/{{dir_prefix}}ingress.yaml
    namespace: asm-gateways

- name: apply yaml manifests
  kubernetes.core.k8s:
    kubeconfig: "{{remote_kubeconfig}}"
    state: present
    src: /tmp/{{cluster_name}}/{{dir_prefix}}ingress-backendconfig.yaml
    namespace: asm-gateways


