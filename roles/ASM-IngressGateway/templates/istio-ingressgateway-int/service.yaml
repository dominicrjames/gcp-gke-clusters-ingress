# ingress gateway for private internal services
apiVersion: v1
kind: Service
metadata:
  name: istio-ingressgateway-int
  labels:
    app: istio-ingressgateway-int
    istio: ingressgateway-int
  annotations:
    # https://cloud.google.com/architecture/exposing-service-mesh-apps-through-gke-ingress#install_an_ingress_gateway
    # internal TCP LB does not need NEG, but HTPPS LB does
    cloud.google.com/neg: '{"ingress": true}'
    cloud.google.com/app-protocols: '{"https":"HTTPS"}'

    cloud.google.com/load-balancer-type: "Internal" # TCP LB

    networking.gke.io/suppress-firewall-xpn-error: "true"
    kubernetes.io/ingress.class: istio-int

    # this MUST exist for internal HTTPS LB health check, or else unhealthy LB
    # needed whether or not using container native routing
    # there was some question initially, but this also seems to be ok with internal TCP LB (although unused)
    cloud.google.com/backend-config: '{"default": "ingress-backendconfig-int"}'
spec:
  loadBalancerIP: {{subnet_prefix}}.199
  loadBalancerSourceRanges: [ 10.0.0.0/8 ]
  ports:
  # status-port exposes a /healthz/ready endpoint that can be used with GKE Ingress health checks
  # changing to 15022 does not change internal bind port, it is ok for value to be same as primary ingress gateway
  - name: status-port
    port: 15021
    protocol: TCP
    targetPort: 15021
  # Any ports exposed in Gateway resources should be exposed here.
  - name: http2
    port: 80
  - name: https
    port: 443
  selector:
    istio: ingressgateway-int
    app: istio-ingressgateway-int
  type: LoadBalancer
