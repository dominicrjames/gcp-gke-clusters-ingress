# we can use internal static IP OR by setting to regional static IP we can have TCP loadbalancer (cannot be global static IP)
# we also cannot specify an annotation with the name of the regional static IP
#
# If you want an L7 HTTPS LB, use the Ingress object instead
apiVersion: v1
kind: Service
metadata:
  name: istio-ingressgateway
  labels:
    app: istio-ingressgateway
    istio: ingressgateway
  annotations:
    # https://cloud.google.com/architecture/exposing-service-mesh-apps-through-gke-ingress#install_an_ingress_gateway
    cloud.google.com/neg: '{"ingress": true}'
    #cloud.google.com/app-protocols: '{"http":"HTTP2","https":"HTTPS"}' # HTTP/2 with TLS encryption
    cloud.google.com/app-protocols: '{"https":"HTTPS"}' # HTTP/2 with TLS encryption
    cloud.google.com/load-balancer-type: "Internal"
    networking.gke.io/suppress-firewall-xpn-error: "true"
    # need backend config for implementing health check;  otherwise front-facing GCP L7 LB will not be healthy
    cloud.google.com/backend-config: '{"default": "ingress-backendconfig"}'
    # default value of 'istio'
    #kubernetes.io/ingress.class: istio
spec:
  loadBalancerIP: 10.0.0.198
  loadBalancerSourceRanges: [ 10.0.0.0/8 ]
  ports:
  # status-port exposes a /healthz/ready endpoint that can be used with GKE Ingress health checks
  - name: status-port
    port: 15021
    protocol: TCP
    targetPort: 15021
  # Any ports exposed in Gateway resources should be exposed here.
  #- name: http2
  #  port: 80
  - name: https
    port: 443
  selector:
    istio: ingressgateway
    app: istio-ingressgateway
  # creates regional ephemeral public IP with standard cluster with incluster ASM control plane
  type: LoadBalancer
